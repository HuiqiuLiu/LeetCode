using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CodeImproment
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("app start");
            Console.WriteLine(getNextStringTimes());
            Console.ReadLine();
        }

        private static List<DateTime[]> sessionTimes = getSessionTimes();
        private static List<DateTime[]> getSessionTimes()
        {
            List<DateTime[]> timelist = new List<DateTime[]>();
            DateTime[] session1 = new DateTime[] {
                new DateTime(2019, 7, 10, 14, 0, 0),//set correctstart date 2019/9/10 14:00
                new DateTime(2019, 9, 10, 17, 0, 0),
                new DateTime(2019, 9, 10, 17, 10, 0),
                new DateTime(2019, 9, 10, 18, 0, 0),
            };       
            DateTime[] session2 = new DateTime[] {
                new DateTime(2019, 9, 10, 18, 0, 0),
                new DateTime(2019, 9, 10, 21, 0, 0),
                new DateTime(2019, 9, 10, 21, 10, 0),
                new DateTime(2019, 9, 10, 22, 0, 0)
            };
            DateTime[] session3 = new DateTime[] {
                new DateTime(2019, 9, 10, 22, 0, 0),
                new DateTime(2019, 9, 10, 1, 0, 0),
                new DateTime(2019, 9, 10, 1, 10, 0),
                new DateTime(2019, 9, 16, 2, 0, 0)  //set correct end date 2019/9/16/ 02:00
            };
            timelist.Add(session1);
            timelist.Add(session2);
            timelist.Add(session3);
            return timelist;
        }

        private static List<string> getNextStringTimes()
        {
            //DateTime now = DateTime.Now;
            DateTime now = new DateTime(2019, 7, 19, 22, 20, 0);
            Console.WriteLine("nowtime: " + now.ToString());
            DateTime tomorrow = now.AddDays(1);
            DateTime combinedDate = new DateTime();
            int currentsession = getLanternSession(now);
            int status = getLanternStatus(now, currentsession);
            if (currentsession == 0 || currentsession == 4)
            {
                Console.WriteLine("failed, currentsession ï¼š" + currentsession);
                return null;
            }
            string[] turnStrings = new string[4];
            DateTime[] next = new DateTime[4];//get next session time

            switch (currentsession)
            {
                case 1:
                case 2:
                    next = sessionTimes[currentsession];
                    break;
                case 3:
                case 4:
                    next = sessionTimes[0];
                    break;

            }
            if (currentsession == 1 || currentsession == 4)//get session2/session1 timelist,always today
            {
                for (int i = 0; i < 4; i++)
                {
                    DateTime combined = now.Date.Add(next[i].TimeOfDay);
                    turnStrings[i] = combined.ToString();
                }
            }
            else if (currentsession == 2)//get session3 timelist
            {
                for (int i = 0; i < 4; i++)
                {
                    DateTime combined = new DateTime();
                    if (i == 0)
                    {
                        combinedDate = now;
                    }
                    else
                    {
                        combinedDate = tomorrow;
                    }
                    combined = combinedDate.Date.Add(next[i].TimeOfDay);
                    turnStrings[i] = combined.ToString();
                }
            }
            else if (currentsession == 3) //get session1 timelist
            {
                if (now.Date > sessionTimes[2][3].Date || now.Date == sessionTimes[2][3].AddDays(-1).Date)
                {
                    return null;
                }
                if (status == 1 && TimeSpan.Compare(now.TimeOfDay, sessionTimes[2][0].TimeOfDay) >= 0)
                {
                    combinedDate = tomorrow;
                }
                else
                {
                    combinedDate = now;
                }

                for (int i = 0; i < 4; i++)
                {
                    DateTime combined = combinedDate.Date.Add(next[i].TimeOfDay);
                    turnStrings[i] = combined.ToString();
                }
            }
            Console.WriteLine("timelist: ");
            turnStrings.ToList().ForEach(Console.WriteLine);
            return turnStrings.ToList();
        }


        private static int getLanternSession(DateTime now)
        {
            int turnId = 0;
            DateTime from = sessionTimes[0][0];
            DateTime to = sessionTimes[2][3];
            List<string> timelist = new List<string>();
            if (now < from || now >= to)
            {
                turnId = 0;
            }
            else
            {
                if (TimeSpan.Compare(now.TimeOfDay, sessionTimes[2][3].TimeOfDay) >= 0 && TimeSpan.Compare(now.TimeOfDay, sessionTimes[0][0].TimeOfDay) < 0)
                {
                    turnId = 4;
                }
                else if (TimeSpan.Compare(now.TimeOfDay, sessionTimes[0][0].TimeOfDay) >= 0 && TimeSpan.Compare(now.TimeOfDay, sessionTimes[0][3].TimeOfDay) < 0)
                {
                    turnId = 1;
                }
                else if (TimeSpan.Compare(now.TimeOfDay, sessionTimes[1][0].TimeOfDay) >= 0 && TimeSpan.Compare(now.TimeOfDay, sessionTimes[1][3].TimeOfDay) < 0)
                {
                    turnId = 2;
                }
                else
                {
                    turnId = 3;

                }
            }
            Console.WriteLine("getnowsession: " + turnId);
            return turnId;
        }
        private static int getLanternStatus(DateTime now, int session)
        {
            DateTime[] sessiontimes = new DateTime[4];
            int status = 0;
            if (session <= 0 || session >= 4)
            {
                return status;
            }
            else
            {
                sessiontimes = sessionTimes[session - 1];
                if (session == 3)
                {
                    if (TimeSpan.Compare(now.TimeOfDay, sessiontimes[1].TimeOfDay) >= 0 && TimeSpan.Compare(now.TimeOfDay, sessiontimes[2].TimeOfDay) < 0)
                    {
                        status = 2;
                    }
                    else if (TimeSpan.Compare(now.TimeOfDay, sessiontimes[2].TimeOfDay) >= 0 && TimeSpan.Compare(now.TimeOfDay, sessiontimes[3].TimeOfDay) < 0)
                    {
                        status = 3;
                    }
                    else if (TimeSpan.Compare(now.TimeOfDay, sessiontimes[0].TimeOfDay) >= 0 || TimeSpan.Compare(now.TimeOfDay, sessiontimes[1].TimeOfDay) < 0)
                    {
                        status = 1;
                    }
                }
                else
                {
                    if (TimeSpan.Compare(now.TimeOfDay, sessiontimes[0].TimeOfDay) >= 0 && TimeSpan.Compare(now.TimeOfDay, sessiontimes[1].TimeOfDay) < 0)
                    {
                        status = 1;
                    }
                    else if (TimeSpan.Compare(now.TimeOfDay, sessiontimes[1].TimeOfDay) >= 0 && TimeSpan.Compare(now.TimeOfDay, sessiontimes[2].TimeOfDay) < 0)
                    {
                        status = 2;
                    }
                    else if (TimeSpan.Compare(now.TimeOfDay, sessiontimes[2].TimeOfDay) >= 0 && TimeSpan.Compare(now.TimeOfDay, sessiontimes[3].TimeOfDay) < 0)
                    {
                        status = 3;
                    }
                }
            }
            Console.WriteLine("get now status: " + status);
            return status;
        }
       



        //public static string DFS(int index,int[] digits,string result)
        //{
        //    if(digits[index]+ digits[index + 1] == 0)
        //    {
        //        result += "+";
        //        return result;
        //    }
        //    if (digits[index] - digits[index + 1] == 0)
        //    {
        //        result += "-";
        //        return result;
        //    }



        //}

        public static string DFS(int index, int amount, string result)
        {
            Console.WriteLine("dfs start" + index, amount, result);
            if (index == numArray.Length - 1)
            {
                if (amount + numArray[index] == 0)
                {
                    result += "+";
                    return result;
                }
                else if (amount - numArray[index] == 0)
                {
                    result += "-";
                    return result;
                }

                return "NA";
            }

            string res;
            res = DFS(index + 1, amount + numArray[index], result += "+");
            if (!res.Equals("NA")) return res;
            else result = result.Substring(0, result.Length - 1);

            res = DFS(index + 1, amount - numArray[index], result += "-");
            if (!res.Equals("NA")) return res;
            else result = result.Substring(0, result.Length - 1);

            return "NA";
        }

        public static int[] digitArr(int n)
        {
            if (n == 0) return new int[1] { 0 };
            var digits = new List<int>();
            for (; n != 0; n /= 10)
            {
                digits.Add(n % 10);
            }
                
            var arr = digits.ToArray();
            Array.Reverse(arr);
            Console.WriteLine("digitarr:"+ string.Join(",", arr));
            return arr;
        }
        static int[] numArray;
        public static string PlusMinus(int n)
        {
            int[] numArray = digitArr(56897);
            if (numArray.Length == 1)
            {
                if (numArray[0] == 0) return "+";
                else return "NA";
            }

            return DFS(1, numArray[0], "");
        }

        public static string timecompare()
        {
            DateTime d1 = new DateTime(2019, 7, 8, 0, 0, 0, 0);
            DateTime d2 = new DateTime(2019, 7, 8, 0, 0, 1, 0);
            DateTime d3 = new DateTime(2019, 7, 7, 23, 59, 59, 58);

            string result1 = TimeSpan.Compare(d2.TimeOfDay, d1.TimeOfDay).ToString();
            Console.WriteLine("compare1:d2:  " + d2 + "d1: " + d1 + "result:" + result1);
            string result2 = TimeSpan.Compare(d1.TimeOfDay, d3.TimeOfDay).ToString();
            Console.WriteLine("compare2:d3:  " + d3 + "d1: " + d1 + "result:" + result2);
            return result1 + result2;
        }

        public static string Randomtest()
        {
            Random rd = new Random();
            Console.WriteLine("rd: " + rd.ToString());
            int bonusIndex = rd.Next(0, 350);
            Console.WriteLine("bonusIndex: " + bonusIndex);
            int[] probability = new int[] { 110, 95, 85, 40, 15, 5 };
            int[] bonusChoice = new int[] { 3, 5, 8, 18, 28, 88 };
            for (int i = 0, sum = 0; i < probability.Length; i++)
            {
                sum += probability[i];
                if (sum > bonusIndex)
                {
                    Console.WriteLine("probability: " + i + "  " + probability[i]);
                    Console.WriteLine("sumï¼š" + sum);
                    bonusIndex = i;
                    Console.WriteLine(bonusChoice[bonusIndex]);
                    break;
                }
            }
            return "hi";
        }
    }
}
